<snippet>
<content><![CDATA[
struct circle{
  point2d c;
  double r;
  circle(){}
  circle(point2d c, double r): c(c), r(r){}
};

enum circle_crossing_state{
  NOTCROSS = 4,
  CIRCUMSCRIBE = 3,
  INTERSECT = 2,
  INSCRIBED = 1,
  INCLUDED = 0,
};

circle_crossing_state circle_crossing(const circle &a, const circle &b){
  double d = dis(a.c, b.c);
  cout << setprecision(20);
  if(d > a.r + b.r + EPS)return NOTCROSS;
  if(abs(d - (a.r + b.r)) < EPS)return CIRCUMSCRIBE;
  if(abs(d - abs(a.r - b.r)) < EPS)return INSCRIBED;
  if(d + EPS < abs(a.r - b.r))return INCLUDED;
  return INTERSECT;
}
]]></content>
<tabTrigger>circle_def</tabTrigger>
<scope>source.c++</scope>
<description>circle definition</description>
</snippet>