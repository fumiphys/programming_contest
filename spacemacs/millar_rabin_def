# -*- mode: snippet -*-
# name: millar_rabin_def
# key: millar_rabin_def
# --
template <typename T>
bool suspect(T a, int s, T d, T n){
  T x = power<T>(a, d, n);
  if(x == 1)return true;
  for(int r = 0; r < s; r++){
    if(x == n - 1)return true;
    x = x * x % n;
  }
  return false;
}

template <typename T>
bool millar_rabin(T n){
  if(n <= 1 || (n > 2 && n % 2 == 0))return false;
  vector<ll> test = {2, 3, 5, 7, 11, 13, 17, 19, 23};
  T d = n - 1;
  int s = 0;
  while(d % 2 == 0)s++, d /= 2;
  for(int i = 0; i < test.size() && test[i] < n; i++){
    if(!suspect<T>(test[i], s, d, n))return false;
  }
  return true;
}
