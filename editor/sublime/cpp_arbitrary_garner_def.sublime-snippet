<snippet>
<content><![CDATA[
// depends: gcd
// depends: garner
template <typename T>
long long arbitrary_garner(vector<T> &b, vector<T> &m, T MOD){
  for(int i = 0; i < b.size(); i++){
    for(int j = 0; j < i; j++){
      T g = gcd(m[i], m[j]);
      if((b[i] - b[j]) % g != 0)return -1;

      m[i] /= g, m[j] /= g;

      T gi = gcd(m[i], g), gj = g / gi;

      do{
        g = gcd(gi, gj);
        gi *= g, gj /= g;
      }while(g != 1);

      m[i] *= gi, m[j] *= gj;
      b[i] %= m[i], b[j] %= m[j];
    }
  }
  return garner<T>(b, m, MOD);
}
]]></content>
<tabTrigger>arbitrary_garner_def</tabTrigger>
<scope>source.c++</scope>
<description>arbitrary_garner definition</description>
</snippet>